library (ggplot2)
library (ggnetwork)
library (igraph)
library (tidyverse)
### SCENIC adjacency matrix
adj<-read.csv("adj1.csv")

### Edges produced from File:'Fig. 2E Network.ipynb'
edges <- read.csv("edge_all_check.csv", header =FALSE)


adj$id <- paste(adj$TF,adj$target)
edges$id<- paste(edges$V1,edges$V2)

#dataset1 %>% right_join(dataset2, by=c("column1","column2"))

full<-inner_join(adj, edges, by = "id") 

full = subset(full, select = -c(id,V1,V2) )
colnames(full) <- c("v1", "v2","weight")
edges<-full
edges <- as.matrix(edges)


### filtering for inferred interactions with highest level of coexpression
full2<-subset(full, full$weight>20)
full2$weight2<-log(full2$weight)
full2 = subset(full2, select = -c(weight2) )
colnames(full2) <- c("v1", "v2","weight")


edges<-full2
edges <- as.matrix(edges)
set.seed(123)
#data2 = graph_from_edgelist (edges, directed = FALSE)
#colnames(edges) <- c("v1", "v2","weight")
b<-graph_from_data_frame(edges,directed = FALSE)
is_weighted(b)
#data3 <- igraph::simplify(data2)
#adjacency_matrix1 <- igraph::as_adjacency_matrix(data3)
z <- cluster_leiden(b,weights = NULL,objective_function = "modularity", resolution = 1.5,n_iterations=1000)
communities(z)
set.seed(123)
k<-communities(z)


set.seed(129)
y2<- ggnetwork(b,igraph::layout_with_kk(b))

#### adding cluster identity of regulon into ggnetwork object
new = c()
for (val in y2$name){
  for (x in c(1:10)){
    if (val %in% k[[x]]){
      new <- append (new,as.character(x))
    }
  } 
}




y2$leid <- new
set.seed(123)
#rhg_cols <- c("#1B9E77", "#D95F02", "#E7298A", "#7570B3", "#66A61E", "#2b3958", "red", "#0276ae","#A6761D")
rhg_cols <- c("#1B9E77", "#D95F02", "#E7298A", "red", "#66A61E", "black", "#7570B3", "#0276ae","#A6761D",'purple')
rhg_cols <- c("#1B9E77", "#D95F02", "#E7298A", "black", "red","#66A61E", "darkred", "#0276ae","#A6761D",'purple')

y2[is.na(y2)] <- 10
#y2$weight<-log(y2$weight)

a<-y2$weight
a<-as.numeric(a)
a<-log(a)
y2$weight<-a
library(ggraph)
library(igraph)
library(ggnetwork)
set.seed(123)

# curated list of genes to label
e<-c(k[[3]],k[[9]][1:10],k[[5]][1:10],k[[4]][1:10],k[[1]][1:10],k[[2]][1:10],k[[6]][1:10],k[[7]][1:10],k[[8]][1:10],k[[10]][1:10])


ggplot(y2, aes(x = x, y = y, xend = xend, yend = yend)) +
  geom_edges(color="black",size=0.3,aes(alpha=(weight))) +
  geom_nodes(aes(color = leid), size = 1)+
  geom_nodelabel_repel(aes(color = leid,label = name),
                       fontface = "bold",size = 2.8,data = y2[y2$name %in% e,], max.overlaps = Inf) +
  #scale_color_brewer(palette = "Set1") +
  scale_colour_manual(values = rhg_cols) +
  theme_blank() 
