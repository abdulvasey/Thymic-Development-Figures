library(tidyverse)
library(Seurat)
library(tSpace)
library(umap)
library(SCopeLoomR)
library(igraph)
library (ggplot2)
library (ggnetwork)
library (igraph)


###Seurat of thymic epithelial cells from all stages, PNM10 samples excluded
srt <- readRDS("teconly.from.all.1.repca.reclust.int.rds")
meta <- read_csv("vertical_metadata.csv")

srt@meta.data <- srt@meta.data %>% 
  rownames_to_column("barcode") %>% 
  dplyr::select(barcode:age) %>% 
  left_join(meta %>% dplyr::select(barcode, cellType, type_age, macro, cellType_macro)) %>% 
  mutate(age = factor(age, levels = c("6w","7w","16w","17w","18w","3mo"))) %>%
  column_to_rownames("barcode")
srt <- SetIdent(srt, value = srt@meta.data$cellType)

####Isolating populations with high canonical cortical and medullary expression
Idents(srt, WhichCells(srt, expression = CCL19 > 4,idents = 'mTEC 1', slot = 'data')) <- 'mtec high'
Idents(srt, WhichCells(srt, expression = PRSS16 > 4,idents = 'cTEC', slot = 'data')) <- 'ctec high'


##subsetting population
srts<-subset(srt,idents = c('ctec high','mtec high'))
####finding differential genes
marks<-FindAllMarkers(srts)


###SCENIC of mtec and ctec hi populations

exprMat <- srts@assays$RNA@data

###filtering genes
genes <- which(rowSums(exprMat) > 1*.01*ncol(exprMat))
exprMat_filter <- exprMat[genes, ]


loom <- build_loom("all_vert_hi_epi.loom", dgem=exprMat_filter)


##### Python3

#!/bin/sh
#SBATCH --job-name=vert_hizontal
#SBATCH -N 1      # nodes requested
#SBATCH -c 32      # cores requested
#SBATCH --mem-per-cpu=8000
#SBATCH -o outfile_vert_hi  # send stdout to outfile
#SBATCH -e errfile_vert_hi  # send stderr to errfile
#SBATCH -t 24:00:00  # time requested in hour:minute:second

module load python/3.9.0
pyscenic grn "/path/all_vert_hi_epi.loom" "/path/allTFs_hg38.txt" -o vert_hi_adj.csv --num_workers 18

module load python/3.9.0
pyscenic ctx \
"/path/vert_hi_adj.csv" \
"/path/hg38__refseq-r80__10kb_up_and_down_tss.mc9nr.genes_vs_motifs.rankings.feather" \
--annotations_fname "/path/motifs-v9-nr.hgnc-m0.001-o0.0.tbl" \
--expression_mtx_fname "/path/all_vert_hi_epi.loom" \
--output vert_hi_reg.csv \
--mask_dropouts \
--num_workers 20

module load python/3.9.0
pyscenic aucell \
"/path/all_vert_hi_epi.loom" \
"/path/vert_hi_reg.csv"\
--output vert_hi_scenic.csv \
--num_workers 1
#### 


####network construction
adj<-read.csv("/path/vert_hi_adj.csv")
####connections.csv is generated in SCENIC adjacencies.ipynb
edges <- read.csv("/path/connections.csv", header =FALSE)


#####adding GRNBoost2 importance score to adj df
adj$id <- paste(adj$TF,adj$target)
edges$id<- paste(edges$V1,edges$V2)


full<-inner_join(adj, edges, by = "id") 

full = subset(full, select = -c(id,V1,V2) )
colnames(full) <- c("v1", "v2","weight")
edges<-full
edges <- as.matrix(edges)


###setting minimum coexpression value threshold for matrix
full2<-subset(full, full$weight>5)


####ensuring regulons shown have a minimum of 5 connections
tally<-as.data.frame(table(full2$v1))
sub<-subset(tally,tally$Freq>4)
full2 <- full2[full2$v1 %in% sub$Var1, ]

edges<-full2
edges <- as.matrix(edges)
set.seed(123)

##igraph setup
b<-graph_from_data_frame(edges,directed = FALSE)

###gathering list of regulon defining TFs
reg<-unique(full2$v1)


#markers

marks2<-subset(marks,marks$p_val<10^-30)
marks3<-subset(marks2,marks2$cluster=='mtec high')
marks4<-subset(marks3,marks3$avg_log2FC>0)
marks5<-subset(marks2,marks2$cluster=='ctec high')
marks6<-subset(marks5,marks5$avg_log2FC>0)
##markers for mtec hi
mt<-marks4$gene[1:400]
##markers for ctec hi
ct<-marks6$gene[1:400]

ct<-ct[! ct %in% reg]
mt<-mt[! mt %in% reg]
lst<-list(ct,mt,reg)

###ggnetwork setup
y2<- ggnetwork(b,igraph::layout_with_fr(b))


##assigning labels for nodes
new = c()
for (val in y2$name){
  for (x in c(1:3)){
    if (val %in% lst[[x]]){
      new <- append (new,as.character(x))
    }
  } 
}




y2$leid <- new
set.seed(129)

##select list of genes to be labeled
select<-c('IFIT1','IFITM1','IFITM3','ISG15','IRF8','FOXN1','PAX1','CXCL12','PRSS16','CCL25','PSMB11','CCL19','NFKB1','IRF7','IRF9','STAT1','SPIB','JUNB','JUND','SOX4','NFKB1','ASCL2','SREBF1','CCL21','KRT15','HDAC4','CYP26B1','CREB3L1','RELB','CXCL14','CXCL10','CXCL9','IRF1','SPOCK2','KRT13','KRT14','KRT17','MX1','CLDN4','RPS2','RPL23','FABP5','LY75','RPL28', 'RPS3', 'RPL18A', 'RPL12', 'RPL13', 'RPS23', 'RPS19', 'RPS3A', 'RPS15', 'RPL10','CEBPB','HES4','BHLHE40','CXCL11','CXCL12','CXCL14')

e<-c(reg,mt[1:10],ct[1:10],select)
e<-unique(e)

##ggnetwork construction
plt<-ggplot(y2, aes(x = x, y = y, xend = xend, yend = yend)) +
  geom_edges(color="black",size=0.02) +
  geom_nodes(aes(color = leid), size = 1.5)+
  geom_nodelabel_repel(aes(color = leid,label = name),
                       size = 3.5,data = y2[y2$name %in% e,],force = 5, max.overlaps = Inf) +
  scale_colour_manual(values = rhg_cols) +
  theme_blank() 
plt





#####heatmap of marker ratios
df<-full2
ratios <- data.frame(TF = unique(full3$v1))
colnames(df)<-c('TF','Targets','Importance Score')
ratios <- data.frame(TF = unique(full2$v1))
for (tf in ratios$TF) {
  tf_targets <- unique(df$Targets[df$TF == tf])
  ratio <- (length(intersect(tf_targets, ct))-length(intersect(tf_targets, mt))) / length(tf_targets)
  total_targets <- length(tf_targets)
  ratios[ratios$TF == tf, "Ratio"] <- ratio
  ratios[ratios$TF == tf, "Total_Targets"] <- total_targets
}


ratios <- ratios %>% arrange(Ratio)
ratios <- ratios %>% arrange(Total_Targets)
sorted_df1 <- subset(ratios,ratios$Ratio<0) %>%
  arrange(Ratio, desc(Total_Targets))
sorted_df2 <- subset(ratios,ratios$Ratio>0) %>%
  arrange(Ratio, desc(-Total_Targets))

ord<-c(sorted_df1$TF,'CREB5',sorted_df2$TF)
ratios$TF<-factor(ratios$TF,levels = rev(ord))


heatmap_plot <- ggplot(ratios, aes(x = 1, y = TF, fill = Ratio)) +
  geom_tile(linewidth=0) + 
  scale_fill_gradientn(colors=c('#7E549F','white','#DEA200')) +
  theme_minimal() +
  theme(axis.title = element_blank())
heatmap_plot



########dotplot construction

##genes vector refers to regulons found in network/ordered according to heatmap
genes<-c('SREBF1', 'NFKB1', 'ASCL2', 'MAFG', 'REST', 'FOXN1', 'REL', 'ATF3', 'IRF8', 'CREB5', 'RELB', 'JUN', 'JUND', 'JUNB', 'FOSL1', 'IRF1', 'XBP1', 'STAT1', 'FOS', 'MAFF', 'FOSB', 'EGR1', 'SPIB', 'IRF7', 'BHLHE40', 'KLF5', 'KLF4', 'STAT2', 'BACH1', 'NFIL3', 'CREB3L1', 'ETV7', 'MYC', 'HIVEP3', 'SOX4', 'IRF9', 'CEBPB')
srts<-subset(srt,idents = c('ctec high','mtec high','mcTEC'))
srts@active.ident<-factor(srts@active.ident,levels = c('mtec high','mcTEC','ctec high'))
plt<-DotPlot(srts,features = rev(genes),cols = c('white','darkred'))+ theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, size = 12, hjust=1,vjust=0.5,color='black'),axis.text.y = element_text( size = 12,color = 'black',face = 'italic'))+theme(axis.title.x = element_blank(),axis.title.y = element_blank())+scale_y_discrete(label=c(bquote(mTECI^High),'mcTEC',bquote(cTEC^High)))+
  coord_flip()
plt
