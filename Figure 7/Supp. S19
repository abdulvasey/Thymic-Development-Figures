# libraries
library(DESeq2)
library(tidyverse)
library(readxl)
library(fgsea)

# TPM preprocessing, group_by step is to tabulate transcript variants under gene name
# ex. GAPDH + GAPDH_1 = GAPDH
tpm <- read_tsv("…/salmon.merged.gene_tpm.tsv") %>%
  select(-gene_name) %>%
  mutate(Gene_Name = sub("_.*", "", gene_id)) %>%
  group_by(Gene_Name) %>%
  summarise(across(starts_with("ZE"), sum), .groups = "drop") %>%
  filter(if_any(-Gene_Name, ~ . >= 1)) %>%
  column_to_rownames("Gene_Name")

# count preprocessing, filtering genes that meet TPM threshold
df <- read_tsv("…/deseq2_star_salmon_length_scaled_counts.tsv") %>%
  mutate(Gene_Name = sub("_.*", "", gene_id)) %>%
  group_by(Gene_Name) %>%
  summarise(across(starts_with("ZE"), sum), .groups = "drop") %>%
  column_to_rownames("Gene_Name") %>%
  round() %>%
  filter(rownames(.) %in% rownames(tpm))

# metadata
meta <- read_excel("…/meta.xlsx")

# DESeq2 + VST
dds    <- DESeqDataSetFromMatrix(df, colData = meta, design = ~ Run + cond)
dds    <- DESeq(dds)
vsdata <- vst(dds, blind = FALSE)

# ranks for IFNg vs No IFN
cont <- results(dds, contrast = c("cond","IFNg","No IFN")) %>%
  as.data.frame() %>%
  rownames_to_column("SYMBOL") %>%
  select(SYMBOL, stat) %>%
  drop_na() %>%
  distinct() %>%
  group_by(SYMBOL) %>%
  summarise(stat = mean(stat))
ranks <- deframe(cont)

# helper to load GMT
read_gmt <- function(path) {
  read_lines(path) %>%
    tibble(line = .) %>%
    separate(line, into = c("pathway","url","genes"), sep = "\t", extra = "merge") %>%
    select(-url) %>%
    mutate(genes = str_split(genes, "\t")) %>%
    unnest(genes)
}

# gene sets
gmt_url       <- "https://data.broadinstitute.org/gsea-msigdb/msigdb/release/7.5/c2.cp.v7.5.symbols.gmt"
pathway_key   <- read_gmt(gmt_url)
gene_sets_list<- pathway_key %>% group_by(pathway) %>% summarise(genes = list(genes)) %>% deframe()

# run GSEA per condition
samples            <- c("IFNg","IFNa","IFNa + IFNg")
all_fgsea_results  <- list()
for (s in samples) {
  res <- results(dds, contrast = c("cond", s, "No IFN")) %>%
    as.data.frame() %>%
    subset(padj < 0.05) %>%
    rownames_to_column("SYMBOL") %>%
    select(SYMBOL, stat) %>%
    drop_na() %>%
    distinct() %>%
    group_by(SYMBOL) %>%
    summarise(stat = mean(stat))
  ranks   <- deframe(res)
  fg      <- fgseaMultilevel(pathways = gene_sets_list, stats = ranks) %>%
    as_tibble() %>%
    arrange(desc(NES))
  all_fgsea_results[[s]] <- fg
}

# select top pathways
top_n       <- 60
top_pathways<- unique(unlist(lapply(all_fgsea_results, function(x) {
  x %>% filter(grepl("KEGG|REACTOME", pathway)) %>% slice_min(pval, n = top_n) %>% pull(pathway)
})))

# prepare plot data
plot_data <- bind_rows(lapply(names(all_fgsea_results), function(s) {
  all_fgsea_results[[s]] %>%
    filter(pathway %in% top_pathways) %>%
    mutate(sample = s,
           logP   = -log10(padj)) %>%
    select(sample, pathway, logP, NES)
})) %>%
  mutate(
    sample  = factor(sample, levels = c("IFNa","IFNg","IFNa + IFNg")),
    pathway = factor(pathway, levels = rev(unique(pathway)))
  )

# dot plot
plt_all <- ggplot(plot_data, aes(sample, pathway)) +
  geom_point(aes(size = logP, color = NES)) +
  scale_color_gradient(low = "darkblue", high = "darkred") +
  scale_size(range = c(1, 10), guide = guide_legend(title = "-log10(p)")) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

ggsave("…/allGSEA.png", plot = plt_all, height = 11, width = 11)
