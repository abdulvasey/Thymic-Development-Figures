library(tidyverse)
library(Seurat)
library(SingleCellExperiment)
library(slingshot)
library(tradeSeq)
library(cowplot)
library(ggrastr)
library(DelayedMatrixStats)
library (RColorBrewer)
library(viridis)
library(SCORPIUS)
library(zoo)
library(pheatmap)
library(tradeSeq)
library(reshape2)
library(ggrepel)


#####Seurat of all fetal epithelial cells
srt <- readRDS("all_red.epi.from.individual.overall.int.rds")

meta <-  read_csv("horizontal_meta.csv")

srt@meta.data <- srt@meta.data %>% 
  rownames_to_column("barcode") %>% 
  select_at(vars(!contains("cellType"))) %>% 
  left_join(meta %>% dplyr::select(barcode, cellType)) %>% 
  mutate(tissue = case_when(
    samptype == "TEC" ~ "T",
    samptype == "EEC" ~ "E",
    samptype == "BEC" ~ "B",
    samptype == "LEC" ~ "L"
  )) %>% 
  mutate(group_label = str_glue("{cellType} {tissue}")) %>% 
  column_to_rownames("barcode")

Idents(srt)<-'group_label'

####renaming and ordering clusters
srt <- RenameIdents(srt, `Bud Tip Progenitor L` = "BTP L")
srt <- RenameIdents(srt, `Bud Tip Progenitor Adjacent L` = "BTP Adjacent L")
srt <- RenameIdents(srt, `Bud Tip Progenitor B` = "BTP B")
tec<-c('mcTEC T','cTEC T', 'mTECI T',"mTECII T", 'mTECIII/IV T', 'TECneuro T', 'TECmyo T')
lec<-c('BTP L', 'BTP Adjacent L', 'Multiciliated L', 'Secretory L', 'Epithelial Basal L', 'Neuroendocrine L')
bec<-c('Epithelial Basal B','Club B', 'Goblet B', 'Submucosal Gland B', 'Secretory B','Multiciliated B','BTP B')
eec<-c('Epithelial Basal E', 'Suprabasal E', 'Multiciliated E', 'Gastric Epithelial E')
ord<-c(tec,bec,lec,eec)

srt@active.ident<-factor(srt@active.ident,levels = ord)

tec<-c('mcTEC T','cTEC T', 'mTECI T',"mTECII T", 'mTECIII/IV T', 'TECneuro T', 'TECmyo T')
lec<-c('BTP L', 'BTP Adj. L', 'MC L', 'Sec. L', 'Epi. Basal L', 'NE L')
bec<-c('Epi. Basal B','Club B', 'Goblet B', 'Submuc. B', 'Sec. B','MC B','BTP B')
eec<-c('Epi. Basal E', 'Suprabasal E', 'MC E', 'Gastric E')
ord<-c(tec,bec,lec,eec)
new.cluster.ids <- ord
names(new.cluster.ids) <- levels(srt)
srt <- RenameIdents(srt, new.cluster.ids)
srt@active.ident<-factor(srt@active.ident,levels = ord)

table(srt@active.ident)

#subsetting select epithelial cluster
sub<-subset(srt,idents=c('mcTEC T','cTEC T','mTECI T','mTECII T','Epi. Basal B','BTP L','Epi. Basal E'))

#####Differential markers
marks<-FindAllMarkers(sub)




####EMAP plot setup
library(tidyverse)
library(clusterProfiler)
library(enrichplot)
library(Seurat)
library(cowplot)
library(ggnewscale)
library(ggrastr)
library(viridis)
library(dplyr)
library(plyr)
library(Seurat)

read_gmt <- function(path){
  tibble(line = read_lines(path)) %>% 
    separate(line, into = c("pathway", "url", "genes"), sep = "\t", extra = "merge") %>% 
    dplyr::select(-url) %>% 
    mutate(genes = str_split(genes, "\t")) %>% 
    unnest(genes)
}

version <- "7.5"
gmt_path <- str_glue("https://data.broadinstitute.org/gsea-msigdb/msigdb/release/{version}/c2.cp.v{version}.symbols.gmt")
pathway_key <- read_gmt(gmt_path)

get_rank_list <- function(path, dge_type = "dge"){
  if(dge_type == "cge"){
    df <- read_csv(path) %>% 
      # filter(cell_group == cluster_filter) %>% 
      dplyr::select(!contains(c("pct","max","min"))) %>% 
      pivot_longer(!cell_group:gene, names_to = c("tissue","metric"), values_to="value", names_pattern = "(.{3})_(.*)") %>% 
      pivot_wider(names_from = "metric", values_from = "value") %>% 
      group_by(cell_group, gene) %>% 
      summarise(
        avg_log2FC = mean(avg_log2FC, na.rm = T), 
        padj_max = max(p_val_adj, na.rm = T),
        padj_min = min(p_val_adj, na.rm = T),
        padj_avg = mean(p_val_adj, na.rm = T),
      ) %>% 
      ungroup() %>% 
      dplyr::select(cluster = cell_group, gene, avg_log2FC) %>% 
      arrange(cluster, desc(avg_log2FC)) %>% 
      group_by(cluster) %>% 
      nest() %>% 
      mutate(data = map(data, deframe)) %>% 
      deframe()
  }  
  if (dge_type == "dge"){
    df <- read_csv(path) %>%  
      # filter(cluster == cluster_filter) %>% 
      dplyr::select(cluster, gene, avg_log2FC) %>% 
      arrange(cluster, desc(avg_log2FC)) %>% 
      group_by(cluster) %>% 
      nest() %>% 
      mutate(data = map(data, deframe)) %>% 
      deframe()
  }
  return(df)
}

###path/marks.csv is csv of marks df from above
cluster_genes_list <- get_rank_list(path= 'path/marks.csv', dge_type = "dge")


set.seed(100)
comp_result <- compareCluster(
  geneClusters = cluster_genes_list,
  fun = "GSEA",
  TERM2GENE = pathway_key,
  pvalueCutoff = 0.01
) %>%
  pairwise_termsim()



# Network only overrepresented pathways
comp_result_positive <- comp_result
comp_result_positive@compareClusterResult <- comp_result_positive@compareClusterResult %>% 
  filter(enrichmentScore > 0)


comp_result_positive_df <- comp_result_positive@compareClusterResult %>% 
  separate(ID, into = c("Ontology", "Pathway"), sep = "_", extra = "merge", remove = F) %>%
  # mutate(Pathway=ID) %>% 
  filter(Ontology %in% c("REACTOME","KEGG")) %>% 
  mutate(Cluster = factor(Cluster,
                          levels = c('mcTEC T','cTEC T','mTECI T','mTECII T','Epi. Basal B','BTP L','Epi. Basal E'))) %>% 
  arrange(Cluster, desc(enrichmentScore)) %>% 
  mutate(ID = fct_inorder(ID))
##20 gene sets per cluster
pathway_set <- comp_result_positive_df %>% 
  group_by(Cluster) %>% 
  slice_max(order_by = enrichmentScore, n = 20) %>% 
  pull(Pathway) %>% 
  unique()


plt_pathwayDot_full <- comp_result_positive_df %>% 
  filter(Pathway %in% pathway_set) %>% 
  ggplot(aes(x = Cluster, y= ID, fill = enrichmentScore, size = -log10(p.adjust)))+
  geom_point(pch=21, color = "black",stroke=NA)+
  theme_minimal()+
  scale_fill_viridis_c(option = "rocket", limits = c(0,NA), direction = -1 )+
  theme(text = element_text(size =12),axis.text.x = element_text(angle = 90, color = "black",hjust=1),axis.text.y = element_text(color = "black")) +
  labs(x="",y="")+
  guides(size=guide_legend(override.aes=list(shape=21, colour="black", fill="black")))
plt_pathwayDot_full
