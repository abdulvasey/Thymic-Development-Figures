### Load Required Libraries
library(tidyverse)
library(Seurat)
library(biomaRt)
library(dplyr)
library(tSpace)
library(umap)
library(clusterProfiler)
library(enrichplot)
library(cowplot)
library(ggnewscale)
library(ggrastr)
library(viridis)

### Load Seurat Object & Metadata
srt <- readRDS("teconly.from.all.1.repca.reclust.int.rds")
meta <- read_csv("vertical_metadata.csv")

### Merge Metadata
srt@meta.data <- srt@meta.data %>%
  rownames_to_column("barcode") %>%
  select(barcode:age) %>%
  left_join(meta %>% select(barcode, cellType, type_age, macro, cellType_macro), by = "barcode") %>%
  mutate(age = factor(age, levels = c("6w", "7w", "16w", "17w", "18w", "3mo"))) %>%
  column_to_rownames("barcode")

### Subset 6w Clusters
srt <- SetIdent(srt, value = srt@meta.data$age)
srt_sub <- subset(srt, idents = "6w")
srt_sub <- subset(srt_sub, idents = c("mcTEC", "cTEC", "mTEC 1", "mTEC 2", "Parathyroid"))

lev <- c("mcTEC", "cTEC", "mTEC 1", "mTEC 2", "Parathyroid")
srt_sub@active.ident <- factor(srt_sub@active.ident, levels = lev)

newnames <- c("mcTEC 6w", "cTEC 6w", "mTECI 6w", "mTECII 6w", "Parathyroid 6w")
names(newnames) <- levels(srt_sub)
srt_sub <- RenameIdents(srt_sub, newnames)

### Load Gene Set Pathways
read_gmt <- function(path) {
  tibble(line = read_lines(path)) %>%
    separate(line, into = c("pathway", "url", "genes"), sep = "\t", extra = "merge") %>%
    select(-url) %>%
    mutate(genes = str_split(genes, "\t")) %>%
    unnest(genes)
}

version <- "7.5"
gmt_path <- str_glue("https://data.broadinstitute.org/gsea-msigdb/msigdb/release/{version}/c2.cp.v{version}.symbols.gmt")
pathway_key <- read_gmt(gmt_path)

### Module Score: IFN-Gamma
gamma_genes <- pathway_key %>% filter(pathway == "REACTOME_INTERFERON_GAMMA_SIGNALING") %>% pull(genes)
srt_sub <- AddModuleScore(srt_sub, assay = "RNA", features = list(gamma_genes), name = "gamma")

### Module Score: IFN-Alpha/Beta
ab_genes <- pathway_key %>% filter(pathway == "REACTOME_INTERFERON_ALPHA_BETA_SIGNALING") %>% pull(genes)
srt_sub <- AddModuleScore(srt_sub, assay = "RNA", features = list(ab_genes), name = "ab")

### Define Plot Colors
color_key <- c('#FFA07A', 'darkred', '#E6AB02', "#D95F02", "#6D6E71")

### Violin Plot Function
plot_module_score <- function(seurat_obj, feature, title, colors) {
  plt <- VlnPlot(seurat_obj, features = feature, pt.size = 0, cols = colors, combine = FALSE)
  plt <- plt[[1]] +
    stat_summary(fun = mean, geom = "point") +
    NoLegend() +
    ggtitle(title) +
    xlab("") +
    theme(
      axis.text.x = element_text(size = 12),
      axis.text.y = element_text(size = 12),
      plot.title = element_text(size = 12)
    )
  return(plt)
}

### Plot Gamma
plot_module_score(srt_sub, "gamma1", "IFN-Gamma Signaling", color_key)

### Plot Alpha/Beta
plot_module_score(srt_sub, "ab1", "IFN-Alpha/Beta Signaling", color_key)

