library(Seurat)
library(tidyverse)

# Load Seurat object and metadata
srt <- readRDS("teconly.from.all.1.repca.reclust.int.rds")
meta <- read_csv("vertical_metadata.csv")

# Add metadata to srt
srt@meta.data <- srt@meta.data %>% 
  rownames_to_column("barcode") %>% 
  select(barcode:age) %>% 
  left_join(meta %>% select(barcode, cellType, type_age, macro, cellType_macro)) %>% 
  mutate(age = factor(age, levels = c("6w","7w","16w","17w","18w","3mo","10mo"))) %>%
  column_to_rownames("barcode")

# Set identities to cell types
srt <- SetIdent(srt, value = srt@meta.data$cellType)

# Reorder and rename cluster identities
ord <- c("Cycling TEC", "mcTEC", "cTEC", "mTEC 1", "mTEC 2", "mTEC 3/4", "TEC myo/neuro", "Parathyroid")
Idents(srt) <- 'cellType'
srt@active.ident <- factor(srt@active.ident, levels = ord)
new.cluster.ids <- c("Cycling TEC", "mcTEC", "cTEC", "mTECI", "mTECII", "mTECIII/IV", "TEC myo/neuro", "Parathyroid")
names(new.cluster.ids) <- levels(srt)
srt <- RenameIdents(srt, new.cluster.ids)

## subset clusters
srt<-subset(srt,idents = c("mTECI","cTEC"))

######### construction of line graphs
DefaultAssay(srt)<-'RNA'
srt$age<-as.vector(srt$age)

# combine pnm3 and pnm10 in one time point
srt$age[srt$age %in% c("3mo", "10mo")] <- "PN"

## new ident containing cellType and new age data
srt$new<-paste0(srt$cellType,"__",srt$age)

Idents(srt)<-'new'

unique = unique(srt@active.ident)
u<- as.character(unique)
lev<-sort(u)

srt@active.ident<-factor(srt@active.ident,levels=lev)

## plot function
generate_plots <- function(srt, gene_list) {
  plots <- list()
  
  for (gene in gene_list) {
    j <- VlnPlot(srt, features = gene, combine = FALSE)
    q <- j[[1]]$data
    df_grp <- q %>%
      group_by(ident) %>%
      summarise(Average_Expression = mean(.data[[gene]], na.rm = TRUE),
                sd = sd(.data[[gene]], na.rm = TRUE),
                .groups = 'drop')
    
    # Transform the data frame
    df2 <- df_grp %>%
      separate(ident, into = c("type", "time"), sep = "__") %>%
      mutate(
        type = case_when(
          type == "mTEC 1" ~ "mTECI",
          TRUE ~ type
        )
      )
    
    df2$time <- factor(df2$time, levels = c("6w", "7w", "16w", "17w", "18w", "PN"))
    df2$type <- factor(df2$type, levels = c("cTEC", "mTECI"))
    
    plt <- ggplot(df2, aes(x = time, y = Average_Expression, group = type, colour = type)) +
      ggtitle(paste(gene)) +
      geom_line(size = 1.7) +
      theme_minimal() +
      theme(axis.text = element_text(size = 12, color = 'black')) +
      scale_color_manual(values = c('#DEA200', '#7E549F')) +
      scale_x_discrete(labels = c("PCW 6", "PCW 7", "PCW 16", "PCW 17", "PCW 18", "PNM 3,10")) +
      theme(axis.title.x = element_blank()) +
      NoLegend() +
      theme(axis.text.x = element_text(size = 12, color = 'black', angle = 45, hjust = 1)) +
      theme(axis.text.y = element_text(size = 12, color = 'black'))
    plots[[gene]] <- plt
  }
  
  return(plots)
}

gene_list <- c("PSMB8", "PSMB9", "PSMB10", "HLA-DRA", "B2M","JAK1", "IRF7", "IRF9", "CXCL9", "CXCL10",'CCL21')


plot_list <- generate_plots(srt, gene_list)

#plot visualization
wrap_plots(plot_list,ncol = 1)+ plot_layout(guides = 'collect')




############### Coverage Plots
##load annotated scATACseq object from 6A
ATAC<-readRDS('ATAC_annot.RDS')

Idents(ATAC)<-'predicted.id'
cell_types <- c( "mTECI", "cTEC")
ATAC<-subset(ATAC,idents = cell_types)

## subsetting for cells with high labeling confidence
ATAC<-subset(ATAC,prediction.score.max>0.70)

## plot construction
ATAC@active.ident<-factor(ATAC@active.ident,levels=c('cTEC','mTECI'))

# Define the gene lists for each column
col1_genes <- c("PSMB8", "PSMB9", "PSMB10", "HLA-DRA", "B2M","JAK1", "IRF7", "IRF9", "CXCL9", "CXCL10")


# Define a helper function that creates the combined gene plot using CoveragePlot and patchwork
getGenePlot <- function(gene) {
  # Generate the CoveragePlot for the given gene (make sure 'ATAC' is defined in your session)
  j <- CoveragePlot(ATAC, region = gene)
  e <- j[[1]][[1]][["data"]]
  
  # Create the customized ggplot for the coverage data
  p <- ggplot(e, aes(x = position, y = coverage, fill = group, alpha = group)) +
    geom_area(position = "identity") +
    scale_fill_manual(values = c('#DEA200', '#7E549F')) +
    scale_alpha_manual(values = c(0.7, 0.5)) +
    theme_classic() +
    labs(
      title = gene,  
      x = "Genomic Position",
      y = "Norm. Signal",
      fill = "Sample"
    ) +
    theme(
      axis.text.x  = element_blank(),  # Remove x-axis tick labels
      axis.ticks.x = element_blank(),  # Remove x-axis tick marks
      axis.line.x  = element_blank()   # Remove x-axis line
    ) +
    NoLegend() +  
    labs(title = NULL)
  
  # Replace the first plot in the CoveragePlot list with the custom ggplot object
  j[[1]][[1]] <- p
  
  # Adjust the margins for each sub-plot
  p1 <- j[[1]][[1]] + theme(plot.margin = unit(c(0, 0, 0, 0), "cm"),axis.title.x = element_blank(),axis.title.y = element_text(size = 6))
  p2 <- j[[1]][[2]] + theme(plot.margin = unit(c(0, 0, 0, 0), "cm"),axis.title.y = element_blank())+scale_color_manual(values = c("lightblue", "lightgreen", "lightpink"))
  p3 <- j[[1]][[3]] +
    theme(
      axis.title.y = element_blank(),  # Remove y-axis title
      axis.title.x = element_blank(),  # Remove y-axis title
      axis.text.y  = element_blank(),  # Remove y-axis tick labels
      axis.ticks.y = element_blank(),  # Remove y-axis ticks
      panel.grid.major = element_blank(),  # Remove major grid lines
      panel.grid.minor = element_blank()   # Remove minor grid lines
    ) + theme(plot.margin = unit(c(0, 0, 0, 0), "cm"))+theme(text=element_text(size = 8),axis.title.x = element_text(size = 5))
  p3$layers <- list()
  p3[["labels"]][["y"]]<-NULL
  # Combine the three sub-plots vertically with specified relative heights using patchwork
  combined_plot <- (p1 / p2 / p3) +
    plot_layout(heights = c(c(0.7, 0.29, 0.01))) 
  
  return(combined_plot)
}

gene_plots <- setNames(lapply(col1_genes, getGenePlot), col1_genes)

library(patchwork)
wrap_plots(gene_plots, ncol = 1) 
